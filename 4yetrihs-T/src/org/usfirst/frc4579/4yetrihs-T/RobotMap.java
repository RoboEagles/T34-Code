// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4579.4yetrihs-T;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainleftFront;
    public static SpeedController driveTrainrightFront;
    public static SpeedController driveTrainleftBack;
    public static SpeedController driveTrainrightBack;
    public static RobotDrive driveTrainmecanumDrive;
    public static Compressor shootingcompressor;
    public static Relay shootingshooter;
    public static Encoder aimingangleFinder;
    public static SpeedController aimingaimer;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainleftFront = new Talon(1, 1);
	LiveWindow.addActuator("driveTrain", "leftFront", (Talon) driveTrainleftFront);
        
        driveTrainrightFront = new Talon(1, 2);
	LiveWindow.addActuator("driveTrain", "rightFront", (Talon) driveTrainrightFront);
        
        driveTrainleftBack = new Talon(1, 3);
	LiveWindow.addActuator("driveTrain", "leftBack", (Talon) driveTrainleftBack);
        
        driveTrainrightBack = new Talon(1, 4);
	LiveWindow.addActuator("driveTrain", "rightBack", (Talon) driveTrainrightBack);
        
        driveTrainmecanumDrive = new RobotDrive(driveTrainleftFront, driveTrainleftBack,
              driveTrainrightFront, driveTrainrightBack);
	
        driveTrainmecanumDrive.setSafetyEnabled(true);
        driveTrainmecanumDrive.setExpiration(0.1);
        driveTrainmecanumDrive.setSensitivity(0.5);
        driveTrainmecanumDrive.setMaxOutput(1.0);
        shootingcompressor = new Compressor(1, 1, 1, 1);
	
        
        shootingshooter = new Relay(1, 2);
	LiveWindow.addActuator("shooting", "shooter", shootingshooter);
        
        aimingangleFinder = new Encoder(1, 2, 1, 3, false, EncodingType.k4X);
	LiveWindow.addSensor("aiming", "angleFinder", aimingangleFinder);
        aimingangleFinder.setDistancePerPulse(1.0);
        aimingangleFinder.setPIDSourceParameter(PIDSourceParameter.kRate);
        aimingangleFinder.start();
        aimingaimer = new Talon(1, 5);
	LiveWindow.addActuator("aiming", "aimer", (Talon) aimingaimer);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
